var searchIndex = {};
searchIndex['formdata'] = {"items":[[0,"","formdata","This crate parses and processes `hyper::server::Request` data\nthat contains `multipart/form-data` content.",null,null],[3,"ContentDispositionFormData","","We define a Content-Disposition form-data only header, which is found within\nthe mime multipart sections.  NOT FOR GENERAL USE",null,null],[12,"name","","",0,null],[12,"filename","","",0,null],[3,"UploadedFile","","This structure represents uploaded files which were received as\npart of the `multipart/form-data` parsing.  They are streamed to\ndisk because they may not fit in memory.",null,null],[12,"path","","This is the temporary file where the data was saved.",1,null],[12,"filename","","This is the filename that was specified in the data, unfiltered.  It may or may not\nbe legal on the local filesystem.",1,null],[12,"content_type","","This is the content-type that was specified in the data, unvalidated.",1,null],[12,"size","","This is the actual size of the file received",1,null],[5,"parse_multipart","","This function parses and processes `hyper::server::Request` data\nthat contains `multipart/form-data` content.  It does this in a streaming\nfashion, saving embedded uploaded files to disk as they are encountered by\nthe parser.",null,{"inputs":[{"name":"request"}],"output":{"name":"result"}}],[0,"buf","","",null,null],[8,"BufReadPlus","formdata::buf","This trait extends any type that implements BufRead with a\nread_until_token() function.",null,null],[11,"stream_until_token","","",2,null],[11,"eq","formdata","",0,{"inputs":[{"name":"contentdispositionformdata"},{"name":"contentdispositionformdata"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"contentdispositionformdata"},{"name":"contentdispositionformdata"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"contentdispositionformdata"}],"output":{"name":"contentdispositionformdata"}}],[11,"fmt","","",0,{"inputs":[{"name":"contentdispositionformdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"header_name","","",0,{"inputs":[{"name":"contentdispositionformdata"}],"output":{"name":"str"}}],[11,"parse_header","","",0,null],[11,"fmt_header","","",0,{"inputs":[{"name":"contentdispositionformdata"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"error","","",null,null],[4,"Error","formdata::error","",null,null],[13,"NoRequestContentType","","",3,null],[13,"NotMultipart","","",3,null],[13,"NotFormData","","",3,null],[13,"NotImplementedYet","","",3,null],[13,"Eof","","",3,null],[13,"Io","","",3,null],[13,"Httparse","","",3,null],[13,"ParseError","","",3,null],[13,"MissingContentLength","","",3,null],[13,"Hyper","","",3,null],[13,"MissingDisposition","","",3,null],[13,"NoName","","",3,null],[13,"Utf8","","",3,null],[13,"BoundaryNotSpecified","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",3,{"inputs":[{"name":"error"},{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",3,{"inputs":[{"name":"error"},{"name":"fromutf8error"}],"output":{"name":"error"}}]],"paths":[[3,"ContentDispositionFormData"],[3,"UploadedFile"],[8,"BufReadPlus"],[4,"Error"]]};
initSearch(searchIndex);
